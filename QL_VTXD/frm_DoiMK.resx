<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADaTgAAAAAVonAAAAADaaxOA
        AAAALMaQAAAAAtkq1AAAAAFag2mSAAAACtQLZIAAAALIFkAAAAAsgWQAAAAC2SK1AAAAALQC0AAAAAtA
        LQAAAAC8kFbAAAAALyQVsAAAAArYBc4AAAACtgNqcAAAABt5FJtAAAAACtBkgAAAAN3QgAAAAAbQnAAA
        AAArSAAAAAAVqcAAAAABWskAAAAAFayQAAAAAbScAAAAABtIAAAAAAWgAAAAABaAAAAAAFoAAAAAAWgA
        AAAABaAAAAAAFoAAAAAAWgAAAAABaAAAAAAFoAAAAAAWgAAAAABaAAAAAAFoAAAAAAWgAAAAABaAAAAA
        AFoAAAAAAWgAAAAABacAAAAAAsgAAAAACzJAAAAABYgAAAAAFiAAAAAAWIAAAAABYgAAAAAFiAAAAAAW
        IAAAAABYgAAAAAFiAAAAAAWZIAAAAALZIAAAAAFoAAAAAAWgAAAAABaAAAAAANvIAAAAAAUkAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/EABcBAQEBAQAAAAAA
        AAAAAAAAAAACAQP/2gAIAQMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAGZjd0AAAAATg2gAAAADJY1WgAAAAJxrCwAAAAMktBWgAAAAnFayW0AAAACCxBYA
        AAAILEFgAAAAgsc9WAAAACFaJxYAAAAIWCFaAAAAELBCtAAAACFghYAAAAIWCFgAAAAhYI2gAAAATlaJ
        zaAAAABkbpULAAAAATgNoAAAABkgsAAAAAZI2gAAAAAg2gAAAAAQbQAAAAAINoAAAAAEG0AAAAADJVoA
        AAAAMlYAAAAACFgAAAAAIWAAAAAAhYAAAAACFgAAAAAIWAAAAAAhYAAAAACFgAAAAAIWAAAAAAhYAAAA
        ACFgAAAAAIWAAAAAAhYAAAAACFgAAAAAIWAAAAAAhYAAAAACFgAAAAAIbQAAAAAEFgAAAAAQLAAAAABA
        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
        qcqDwh//2Q==
</value>
  </data>
</root>